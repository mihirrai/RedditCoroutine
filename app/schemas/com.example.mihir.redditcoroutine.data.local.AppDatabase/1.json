{
  "formatVersion": 1,
  "database": {
    "version": 1,
    "identityHash": "fb4469640d383fa26e76ea8f7562c9fd",
    "entities": [
      {
        "tableName": "tokens",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `scope` TEXT NOT NULL, `access_token` TEXT NOT NULL, `expiry` TEXT NOT NULL, `refresh_token` TEXT NOT NULL, `active` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "scope",
            "columnName": "scope",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "access_token",
            "columnName": "access_token",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "expiry",
            "columnName": "expiry",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "refresh_token",
            "columnName": "refresh_token",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "active",
            "columnName": "active",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "posts",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `title` TEXT NOT NULL, `author` TEXT NOT NULL, `score` INTEGER NOT NULL, `subreddit` TEXT NOT NULL, `numComments` INTEGER NOT NULL, `createdUtc` INTEGER NOT NULL, `nsfw` INTEGER NOT NULL, `flair` TEXT, `gilded` INTEGER NOT NULL, `sourceSubreddit` TEXT NOT NULL, `thumbnailUrl` TEXT, `url` TEXT NOT NULL, `selftext` TEXT NOT NULL, `isSelf` INTEGER NOT NULL, PRIMARY KEY(`id`, `sourceSubreddit`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "title",
            "columnName": "title",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "author",
            "columnName": "author",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "score",
            "columnName": "score",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "subreddit",
            "columnName": "subreddit",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "numComments",
            "columnName": "numComments",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "createdUtc",
            "columnName": "createdUtc",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "nsfw",
            "columnName": "nsfw",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "flair",
            "columnName": "flair",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "gilded",
            "columnName": "gilded",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "sourceSubreddit",
            "columnName": "sourceSubreddit",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "thumbnailUrl",
            "columnName": "thumbnailUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "url",
            "columnName": "url",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "selftext",
            "columnName": "selftext",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "isSelf",
            "columnName": "isSelf",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id",
            "sourceSubreddit"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "subreddits",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `subredditName` TEXT NOT NULL, `refreshToken` TEXT NOT NULL, `iconUrl` TEXT NOT NULL, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "subredditName",
            "columnName": "subredditName",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "refreshToken",
            "columnName": "refreshToken",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "iconUrl",
            "columnName": "iconUrl",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "comments",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `author` TEXT, `body` TEXT, `children` TEXT, `count` INTEGER NOT NULL, `createdUtc` INTEGER, `depth` INTEGER NOT NULL, `parent` TEXT NOT NULL, `position` INTEGER NOT NULL, `postId` TEXT NOT NULL, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "author",
            "columnName": "author",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "body",
            "columnName": "body",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "children",
            "columnName": "children",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "count",
            "columnName": "count",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "createdUtc",
            "columnName": "createdUtc",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "depth",
            "columnName": "depth",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "parent",
            "columnName": "parent",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "position",
            "columnName": "position",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "postId",
            "columnName": "postId",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      }
    ],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, \"fb4469640d383fa26e76ea8f7562c9fd\")"
    ]
  }
}